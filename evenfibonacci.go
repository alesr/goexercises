package goexercises

import (
	"sync"

	"github.com/alesr/numbers"
)

// EvenFibonacci - https://projecteuler.net/problem=2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
func EvenFibonacci(limit int) int {
	var wg sync.WaitGroup
	fib := numbers.FibonacciGen()
	sum := 0
	mutex := &sync.Mutex{}
	for {
		f := <-fib
		if f < limit {
			wg.Add(1)
			go func() {
				defer wg.Done()
				if f%2 == 0 {
					mutex.Lock()
					sum += f
					mutex.Unlock()
				}
			}()
		} else {
			wg.Wait()
			return sum
		}
	}
}
